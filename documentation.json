{
    "pipes": [],
    "interfaces": [
        {
            "name": "Product",
            "id": "interface-Product-ad8558adbea7fa8b284072129f60b6c4ef83571bf35b34e96f6a31b84b7b37c871d7d518051061150186e82979e25284c8d970a3c5f42116abfa8ca6d75afd54",
            "file": "src/app/products/interfaces/product.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Product {\r\n  id: number;\r\n  name:        string;\r\n  description: string;\r\n  price:       number;\r\n  image:       string;  // URL\r\n  categories:  string[];\r\n}\r\n",
            "properties": [
                {
                    "name": "categories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "ProductsService",
            "id": "injectable-ProductsService-e2693aa7c48315941a93c8f75a39a7ca6bc11df70e7189300d23c05aca08df0647ff2556d47fefcd7399e695282c0352978ed933e3b2d18dcb4cb4f0ef401808",
            "file": "src/app/products/services/products.service.ts",
            "properties": [
                {
                    "name": "_products",
                    "defaultValue": "productsData.products",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product[]",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getProductById",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Product | null>",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "searchProductsByName",
                    "args": [
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Product[]>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { Product } from \"../interfaces/product\";\r\nimport { Observable, delay, of } from \"rxjs\";\r\nimport productsData from '../../../assets/data/products.json';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductsService {\r\n\r\n  private _products: Product[] = productsData.products;\r\n\r\n  searchProductsByName(query: string): Observable<Product[]> {\r\n    const filteredProducts = this._products\r\n      .filter(product => product.name.toLowerCase().includes(query.toLowerCase()));\r\n    return of(filteredProducts || []).pipe(\r\n      delay(1000)\r\n    );\r\n  }\r\n\r\n  getProductById(id: number): Observable<Product | null> {\r\n    const product = this._products\r\n      .find(product => product.id === id);\r\n    return of(product || null).pipe(\r\n      delay(500)\r\n    );\r\n  }\r\n\r\n}\r\n",
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-57eced61b3acc8fa03026e626f33e331bf6d07f0b3e2caf9cd8ff7456a30ee45408cfaf3f8f8202d144699315d7a7099f760a5de2267ed2b6205a560a15fae9d",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'storybook-angular-workshop'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'storybook-angular-workshop';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"mx-5 my-4\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-ebb6914d54bc31b3e9d8a785f3b6e618ba6fb96bbbf85fcb2d1cf67e5556628e8620d178a9efcbf0cc706f0fc5744ddea09e321bbadb1664a2508667a831c18a",
            "file": "src/app/shared/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "shared-button",
            "styleUrls": [],
            "styles": [],
            "template": "  <button\n    type=\"button\"\n    [ngClass]=\"classes\"\n    (click)=\"handleClick($event)\"\n  >\n  {{ label }}\n</button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTexto del botón\n",
                    "description": "<p>Texto del botón</p>\n",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndica si el botón es primario o no\n",
                    "description": "<p>Indica si el botón es primario o no</p>\n",
                    "line": 33,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTamaño del botón\n",
                    "description": "<p>Tamaño del botón</p>\n",
                    "line": 39,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvento que se emite cuando se hace click en el botón\n",
                    "description": "<p>Evento que se emite cuando se hace click en el botón</p>\n",
                    "line": 45,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nconst classesBySize = {\r\n  small: 'btn-sm',\r\n  medium: '',\r\n  large: 'btn-lg'\r\n};\r\n\r\n@Component({\r\n  selector: 'shared-button',\r\n  template: `\r\n    <button\r\n      type=\"button\"\r\n      [ngClass]=\"classes\"\r\n      (click)=\"handleClick($event)\"\r\n    >\r\n    {{ label }}\r\n  </button>\r\n  `\r\n})\r\nexport class ButtonComponent {\r\n\r\n  /**\r\n   * Texto del botón\r\n   */\r\n  @Input()\r\n  label = '';\r\n\r\n  /**\r\n   * Indica si el botón es primario o no\r\n   */\r\n  @Input()\r\n  primary = true;\r\n\r\n  /**\r\n   * Tamaño del botón\r\n   */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n  /**\r\n   * Evento que se emite cuando se hace click en el botón\r\n   */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  get classes(): string[] {\r\n    const buttonSize = classesBySize[this.size];\r\n    const buttonMode = this.primary\r\n      ? 'btn-primary'\r\n      : 'btn-outline-primary';\r\n    return ['btn', buttonSize, buttonMode];\r\n  }\r\n\r\n  handleClick(event: Event): void {\r\n    this.onClick.emit(event);\r\n  }\r\n\r\n}\r\n\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 47
                    }
                }
            }
        },
        {
            "name": "LoadingSpinnerComponent",
            "id": "component-LoadingSpinnerComponent-f307e5ccc2b13f9443ae6d20f0614ac6cb7ccc2ff63ad22785e98b77bf13a298f8d801b1f64ecdd006f56f49dc96dea84e1927c062a4826542a1f24675968ae8",
            "file": "src/app/shared/components/loading-spinner/loading-spinner.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "shared-loading-spinner",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"d-flex justify-content-center align-items-center\">\n  <div class=\"spinner-border text-primary\" role=\"status\">\n    <span class=\"visually-hidden\">Cargando...</span>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'shared-loading-spinner',\r\n  template: `\r\n    <div class=\"d-flex justify-content-center align-items-center\">\r\n      <div class=\"spinner-border text-primary\" role=\"status\">\r\n        <span class=\"visually-hidden\">Cargando...</span>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class LoadingSpinnerComponent { }\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ProductCardComponent",
            "id": "component-ProductCardComponent-7ff100917bd47cc0bf6308b50e489762f2c25670466385810fc269446419e3cf9021ba4f0b173355fbec01b4ba78492e7735df5c8d3cdc5fd02485c9cb4ff7bc",
            "file": "src/app/products/components/product-card/product-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-product-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./product-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndica si se está cargando el producto\n",
                    "description": "<p>Indica si se está cargando el producto</p>\n",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "product",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nProducto a mostrar\n",
                    "description": "<p>Producto a mostrar</p>\n",
                    "line": 20,
                    "type": "Product",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClickProduct",
                    "defaultValue": "new EventEmitter<Product>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvento que se emite cuando se hace click en el botón de ver detalles\n",
                    "description": "<p>Evento que se emite cuando se hace click en el botón de ver detalles</p>\n",
                    "line": 26,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Product } from '../../interfaces/product';\r\n\r\n@Component({\r\n  selector: 'app-product-card',\r\n  templateUrl: './product-card.component.html'\r\n})\r\nexport class ProductCardComponent {\r\n\r\n  /**\r\n   * Indica si se está cargando el producto\r\n   */\r\n  @Input()\r\n  public isLoading: boolean = false;\r\n\r\n  /**\r\n   * Producto a mostrar\r\n   */\r\n  @Input()\r\n  public product?: Product;\r\n\r\n  /**\r\n   * Evento que se emite cuando se hace click en el botón de ver detalles\r\n   */\r\n  @Output()\r\n  public onClickProduct = new EventEmitter<Product>();\r\n\r\n  ngOnInit(): void {\r\n    if (!this.isLoading && !this.product) throw new Error('Product property is required');\r\n  }\r\n\r\n  handleClick(): void {\r\n    this.onClickProduct.emit(this.product);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"card\" *ngIf=\"isLoading\">\r\n  <div class=\"card animate-pulse\">\r\n    <div class=\"opacity-25 bg-secondary\" style=\"aspect-ratio: 4/3;\"></div>\r\n    <div class=\"card-body\">\r\n      <div class=\"opacity-25 bg-secondary w-75 mb-3\" style=\"height: 24px;\"></div>\r\n      <div class=\"card-text opacity-25 bg-secondary mb-1\" style=\"height: 16px;\"></div>\r\n      <div class=\"card-text opacity-25 bg-secondary w-50\" style=\"height: 16px;\"></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"card h-100\" *ngIf=\"!isLoading\">\r\n  <img\r\n    [src]=\"product?.image\"\r\n    [alt]=\"product?.name\"\r\n    class=\"card-img-top bg-secondary bg-opacity-25\"\r\n    style=\"aspect-ratio: 4/3;\"\r\n  >\r\n  <div class=\"card-body\">\r\n    <h5 class=\"card-title\">{{product?.name}}</h5>\r\n    <p class=\"card-text\">{{product?.description}}</p>\r\n  </div>\r\n  <div class=\"card-footer d-flex justify-content-center\">\r\n    <shared-button label=\"Ver detalles\" (onClick)=\"handleClick()\" />\r\n  </div>\r\n</div>\r\n\r\n"
        },
        {
            "name": "ProductCatalogPageComponent",
            "id": "component-ProductCatalogPageComponent-8283ee6074f790a03fb594a956b29352a704f22d56c94caf00c9559e1a5a9456fc64d8a6694fc5c782838b7812eafff710af1c29f12691a913bdf7a3958dc4d6",
            "file": "src/app/products/pages/product-catalog-page/product-catalog-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./product-catalog-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isBusy",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "products",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product[]",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handleViewDetails",
                    "args": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "searchByName",
                    "args": [
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { ProductsService } from '../../services/products.service';\r\nimport { Product } from '../../interfaces/product';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  templateUrl: './product-catalog-page.component.html'\r\n})\r\nexport class ProductCatalogPageComponent {\r\n\r\n  public products: Product[] = [];\r\n  public isBusy: boolean = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private productService: ProductsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.searchByName('');\r\n  }\r\n\r\n  searchByName(query: string): void {\r\n    this.isBusy = true;\r\n    this.productService\r\n      .searchProductsByName(query)\r\n      .subscribe(products => {\r\n        this.products = products;\r\n        this.isBusy = false;\r\n      });\r\n  }\r\n\r\n  handleViewDetails(product: Product): void {\r\n    this.router.navigateByUrl(`/products/${product.id}`);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<h2>Catálogo de Productos</h2>\r\n\r\n<hr>\r\n\r\n<div class=\"mb-3\">\r\n  <shared-search-bar placeholder=\"Buscar productos\" (onSearch)=\"searchByName($event)\" />\r\n</div>\r\n<app-product-list [isLoading]=\"isBusy\" [products]=\"products\" (onViewDetails)=\"handleViewDetails($event)\" />\r\n"
        },
        {
            "name": "ProductDetailsPageComponent",
            "id": "component-ProductDetailsPageComponent-095ddca71f188891deec253353e4ed4b63906148d4554d3c27116ba4338b6fd2951ed4182853b51cc861b246b5c525fd923f123303c399f15231e8ceb8edf4b4",
            "file": "src/app/products/pages/product-details-page/product-details-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./product-details-page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isBusy",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "product",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product",
                    "optional": true,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "goBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { switchMap } from 'rxjs';\r\nimport { Product } from '../../interfaces/product';\r\nimport { ProductsService } from '../../services/products.service';\r\n\r\n@Component({\r\n  templateUrl: './product-details-page.component.html'\r\n})\r\nexport class ProductDetailsPageComponent {\r\n\r\n  public isBusy: boolean = false;\r\n  public product?: Product;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private productsService: ProductsService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.isBusy = true;\r\n    this.activatedRoute.params\r\n      .pipe(\r\n        switchMap( ({ id }) => this.productsService.getProductById( Number(id) ) )\r\n      )\r\n      .subscribe( product => {\r\n        this.isBusy = false;\r\n        if ( !product ) {\r\n          return this.router.navigateByUrl('');\r\n        }\r\n        return this.product = product;\r\n      });\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigateByUrl('../');\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productsService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productsService",
                        "type": "ProductsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<h2>Detalle del producto</h2>\r\n\r\n<hr>\r\n\r\n<div *ngIf=\"isBusy\" class=\"mt-4\">\r\n  <shared-loading-spinner />\r\n</div>\r\n\r\n<div *ngIf=\"!isBusy\" class=\"row\">\r\n  <div class=\"col-md-4 d-flex justify-content-center\">\r\n    <img [src]=\"product?.image\" class=\"img-fluid\" alt=\"product?.name\">\r\n  </div>\r\n  <div class=\"col-md-6\">\r\n    <div>\r\n      <h3>{{ product?.name }}</h3>\r\n      <p>{{ product?.price | currency }}</p>\r\n    </div>\r\n    <p>{{ product?.description }}</p>\r\n    <div class=\"d-flex gap-1 mb-4\">\r\n      <span\r\n        *ngFor=\"let category of product?.categories\"\r\n        class=\"badge bg-primary\"\r\n      >\r\n        {{ category }}\r\n      </span>\r\n    </div>\r\n    <shared-button label='Regresar' [primary]=\"false\" (onClick)=\"goBack()\" />\r\n  </div>\r\n</div>\r\n\r\n"
        },
        {
            "name": "ProductListComponent",
            "id": "component-ProductListComponent-612a095f5790951dc38dea87c3838ae69a5ea3af0e1109ce057acc89daf007cec52a208e06f7b9626f8ef7aa0f9099734cfc9b0547cfa0b351aa2824e91c4c33",
            "file": "src/app/products/components/product-list/product-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-product-list",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./product-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIndica si se están cargando los productos\n",
                    "description": "<p>Indica si se están cargando los productos</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "loadingCardsCount",
                    "defaultValue": "4",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nNúmero de tarjetas de carga a mostrar\n",
                    "description": "<p>Número de tarjetas de carga a mostrar</p>\n",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "products",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLista de productos a mostrar\n",
                    "description": "<p>Lista de productos a mostrar</p>\n",
                    "line": 26,
                    "type": "Product[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onViewDetails",
                    "defaultValue": "new EventEmitter<Product>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvento que se emite cuando se hace click en un producto\n",
                    "description": "<p>Evento que se emite cuando se hace click en un producto</p>\n",
                    "line": 32,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "handleClickProduct",
                    "args": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Product } from '../../interfaces/product';\r\n\r\n@Component({\r\n  selector: 'app-product-list',\r\n  templateUrl: './product-list.component.html'\r\n})\r\nexport class ProductListComponent {\r\n\r\n  /**\r\n   * Número de tarjetas de carga a mostrar\r\n   */\r\n  @Input()\r\n  public loadingCardsCount: number = 4;\r\n\r\n  /**\r\n   * Indica si se están cargando los productos\r\n   */\r\n  @Input()\r\n  public isLoading: boolean = false;\r\n\r\n  /**\r\n   * Lista de productos a mostrar\r\n   */\r\n  @Input()\r\n  public products: Product[] = [];\r\n\r\n  /**\r\n   * Evento que se emite cuando se hace click en un producto\r\n   */\r\n  @Output()\r\n  public onViewDetails = new EventEmitter<Product>();\r\n\r\n  get emptyProducts(): number[] {\r\n    return Array(this.loadingCardsCount).fill(0);\r\n  }\r\n\r\n  handleClickProduct(product: Product): void {\r\n    this.onViewDetails.emit(product);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "emptyProducts": {
                    "name": "emptyProducts",
                    "getSignature": {
                        "name": "emptyProducts",
                        "type": "[]",
                        "returnType": "number[]",
                        "line": 34
                    }
                }
            },
            "templateData": "<div *ngIf=\"products.length > 0; else noProducts\">\r\n  <p class=\"text-muted\">Se encontraron {{products.length}} productos</p>\r\n</div>\r\n<ng-template #noProducts>\r\n  <p class=\"text-muted\">No se encontraron productos</p>\r\n</ng-template>\r\n\r\n<div *ngIf=\"isLoading\" class=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4\">\r\n  <div *ngFor=\"let i of emptyProducts\" class=\"col\">\r\n    <app-product-card [isLoading]=\"true\" />\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"!isLoading\" class=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4\">\r\n  <div *ngFor=\"let product of products\" class=\"col\">\r\n    <app-product-card [product]=\"product\" (onClickProduct)=\"handleClickProduct($event)\" />\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SearchBarComponent",
            "id": "component-SearchBarComponent-d949a6554622d596a88f944dee02e26cad11d7524f43e749ac8e02bd73c5adfcd8e0b46f9136dac93942d576ee0a4c87479c78ae2504ff2e7159b9e97dcd398e",
            "file": "src/app/shared/components/search-bar/search-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "shared-search-bar",
            "styleUrls": [],
            "styles": [],
            "template": "<input\n  type=\"text\"\n  class=\"form-control\"\n  [placeholder]=\"placeholder\"\n  [ariaLabel]=\"placeholder\"\n  (keyup)=\"handleKeyPress(searchInput.value)\"\n  #searchInput\n/>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPlaceholder a mostrar en el campo de búsqueda\n",
                    "description": "<p>Placeholder a mostrar en el campo de búsqueda</p>\n",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onSearch",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvento que se emite cuando se escribe en el campo de búsqueda\n",
                    "description": "<p>Evento que se emite cuando se escribe en el campo de búsqueda</p>\n",
                    "line": 29,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "debouncer",
                    "defaultValue": "new Subject<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "handleKeyPress",
                    "args": [
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "query",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Subject, debounceTime } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'shared-search-bar',\r\n  template: `\r\n    <input\r\n      type=\"text\"\r\n      class=\"form-control\"\r\n      [placeholder]=\"placeholder\"\r\n      [ariaLabel]=\"placeholder\"\r\n      (keyup)=\"handleKeyPress(searchInput.value)\"\r\n      #searchInput\r\n    />\r\n  `\r\n})\r\nexport class SearchBarComponent implements OnInit {\r\n\r\n  /**\r\n   * Placeholder a mostrar en el campo de búsqueda\r\n   */\r\n  @Input()\r\n  public placeholder: string = '';\r\n\r\n  /**\r\n   * Evento que se emite cuando se escribe en el campo de búsqueda\r\n   */\r\n  @Output()\r\n  public onSearch = new EventEmitter<string>();\r\n\r\n  private debouncer = new Subject<string>();\r\n\r\n  ngOnInit(): void {\r\n    this.debouncer\r\n      .pipe(\r\n        debounceTime(300)\r\n      )\r\n      .subscribe(query => this.onSearch.emit(query));\r\n  }\r\n\r\n  public handleKeyPress(query: string) {\r\n    this.debouncer.next(query);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-c373d83249df336008b070ac36be69057756135e98f935d974379d9a366b6d0af13db1b9689542b19726f10c4295959ba99931126fd13b4b3795c0e8b6d9c4ee",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-91a7ed93c89f36eecebc7f321a610648fc1a31fa022b3d99df3442cfd49e25129e23390ffe3f8897473fc86f7853f6b5a911aac561a388ccd457f1ae6f417490",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"products\",\r\n    loadChildren: () => \"import('./products/products.module').then(m => m.ProductsModule)\"\r\n  },\r\n  {\r\n    path: \"**\",\r\n    redirectTo: \"products\"\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProductsModule",
            "id": "module-ProductsModule-9f9b37fe6f98cb2aef711e6fee83c45ff707713793f672699434a97a5106755e1386db350323d6809ad0564676f317d6f1b1c29b404cf6b613e1f5235e8d64ba",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/products/products.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProductCatalogPageComponent } from './pages/product-catalog-page/product-catalog-page.component';\r\nimport { ProductDetailsPageComponent } from './pages/product-details-page/product-details-page.component';\r\nimport { ProductsRoutingModule } from './products-routing.module';\r\nimport { ProductCardComponent } from './components/product-card/product-card.component';\r\nimport { ProductListComponent } from './components/product-list/product-list.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProductCatalogPageComponent,\r\n    ProductDetailsPageComponent,\r\n    ProductCardComponent,\r\n    ProductListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    ProductsRoutingModule\r\n  ]\r\n})\r\nexport class ProductsModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ProductCardComponent"
                        },
                        {
                            "name": "ProductCatalogPageComponent"
                        },
                        {
                            "name": "ProductDetailsPageComponent"
                        },
                        {
                            "name": "ProductListComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ProductsRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProductsRoutingModule",
            "id": "module-ProductsRoutingModule-3c0331ba95d057fbdb3faeac9f51adc55a3b3b3485be32630f6db4ad4f7a5c71cd2959ef6d07fa485d12a4b940c116bf6d4251ab612d4cfb15dfdcf980f87212",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/products/products-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { ProductCatalogPageComponent } from \"./pages/product-catalog-page/product-catalog-page.component\";\r\nimport { ProductDetailsPageComponent } from \"./pages/product-details-page/product-details-page.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: ProductCatalogPageComponent\r\n  },\r\n  {\r\n    path: \":id\",\r\n    component: ProductDetailsPageComponent\r\n  },\r\n  {\r\n    path: \"**\",\r\n    redirectTo: \"\"\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class ProductsRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-576786c5b9f9aa26cfeab95ca8de5f8f9a5802c479f2dce3de667442da11c1a6ac872f2186e3c0f735e9f2e5e81630e601503c39c620cb96f76015bd20dcfc9b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SearchBarComponent } from './components/search-bar/search-bar.component';\r\nimport { ButtonComponent } from './components/button/button.component';\r\nimport { LoadingSpinnerComponent } from './components/loading-spinner/loading-spinner.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SearchBarComponent,\r\n    ButtonComponent,\r\n    LoadingSpinnerComponent\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    ButtonComponent,\r\n    LoadingSpinnerComponent,\r\n    SearchBarComponent\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "LoadingSpinnerComponent"
                        },
                        {
                            "name": "SearchBarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "LoadingSpinnerComponent"
                        },
                        {
                            "name": "SearchBarComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "classesBySize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  small: 'btn-sm',\r\n  medium: '',\r\n  large: 'btn-lg'\r\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/search-bar/search-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/products/components/product-card/product-card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/products/components/product-list/product-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Loading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/products/components/product-card/product-card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    isLoading: true,\r\n  }\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonComponent>",
                "defaultValue": "{\r\n  title: 'Shared/Button', // La ruta donde se va a mostrar nuestra historia (en el sidebar de Storybook)\r\n  component: ButtonComponent,\r\n  tags: ['shared', 'button', 'autodocs'],\r\n  args: { // Aquí definimos los valores por defecto de los inputs de nuestro componente\r\n    label: 'Button'\r\n  },\r\n  argTypes: { // Aquí definimos los tipos de inputs para las propiedades de nuestro componente\r\n  },\r\n  parameters: { // Los parámetros nos permiten definir configuraciones adicionales para nuestra historia (para controlar las funcionalidades de Storybook o de los addons)\r\n    backgrounds: {\r\n      values: [\r\n        { name: 'red', value: '#f00' },\r\n        { name: 'green', value: '#0f0' },\r\n        { name: 'blue', value: '#00f' },\r\n      ],\r\n    },\r\n  },\r\n  decorators: [] // Los decoradores nos permiten definir funciones que se ejecutan antes y después de renderizar nuestra historia\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/search-bar/search-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SearchBarComponent>",
                "defaultValue": "{\r\n  title: 'Shared/Search bar',\r\n  component: SearchBarComponent,\r\n  tags: ['shared', 'search', 'bar', 'autodocs'],\r\n  args: {\r\n    placeholder: 'Search',\r\n  }\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/products/components/product-card/product-card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ProductCardComponent>",
                "defaultValue": "{\r\n  title: 'Products/Product Card',\r\n  component: ProductCardComponent,\r\n  tags: ['products', 'product', 'card', 'autodocs'],\r\n  args: {\r\n    product: {\r\n      id: 1,\r\n      image: 'https://picsum.photos/seed/picsum/200/300',\r\n      name: 'Product 1',\r\n      price: 100,\r\n      description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam, voluptatum.',\r\n      categories: [\"Category 1\", \"Category 2\"]\r\n    }\r\n  },\r\n  decorators: [ // No añadir hasta explicar que, sin esta propiedad, no se muestra el botón\r\n    moduleMetadata({\r\n      declarations: [ButtonComponent],\r\n      imports: [CommonModule],\r\n    }),\r\n    componentWrapperDecorator((story) => `<div class=\"w-25\">${story}</div>`) // Añadir esta propiedad para que se muestre de tamaño más\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/products/components/product-list/product-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ProductListComponent>",
                "defaultValue": "{\r\n  title: 'Products/Product list',\r\n  component: ProductListComponent,\r\n  tags: ['products', 'product', 'list', 'autodocs'],\r\n  args: {\r\n    products: productsData.products.slice(0, 4),\r\n  },\r\n  decorators: [ // No añadir hasta explicar que, sin esta propiedad, no se muestra el botón\r\n    moduleMetadata({\r\n      declarations: [ProductCardComponent, ButtonComponent],\r\n      imports: [CommonModule],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\r\n  parameters: {\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/,\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'Primary',\r\n    primary: true\r\n  }\r\n}"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    label: 'Secondary',\r\n    primary: false\r\n  }\r\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "src/app/shared/components/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SearchBarComponent>",
                "file": "src/app/shared/components/search-bar/search-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ProductCardComponent>",
                "file": "src/app/products/components/product-card/product-card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Meta<ProductListComponent>",
                "file": "src/app/products/components/product-list/product-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/shared/components/button/button.component.ts": [
                {
                    "name": "classesBySize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  small: 'btn-sm',\r\n  medium: '',\r\n  large: 'btn-lg'\r\n}"
                }
            ],
            "src/app/shared/components/search-bar/search-bar.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/search-bar/search-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/search-bar/search-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SearchBarComponent>",
                    "defaultValue": "{\r\n  title: 'Shared/Search bar',\r\n  component: SearchBarComponent,\r\n  tags: ['shared', 'search', 'bar', 'autodocs'],\r\n  args: {\r\n    placeholder: 'Search',\r\n  }\r\n}"
                }
            ],
            "src/app/products/components/product-card/product-card.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/products/components/product-card/product-card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "Loading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/products/components/product-card/product-card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    isLoading: true,\r\n  }\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/products/components/product-card/product-card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ProductCardComponent>",
                    "defaultValue": "{\r\n  title: 'Products/Product Card',\r\n  component: ProductCardComponent,\r\n  tags: ['products', 'product', 'card', 'autodocs'],\r\n  args: {\r\n    product: {\r\n      id: 1,\r\n      image: 'https://picsum.photos/seed/picsum/200/300',\r\n      name: 'Product 1',\r\n      price: 100,\r\n      description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam, voluptatum.',\r\n      categories: [\"Category 1\", \"Category 2\"]\r\n    }\r\n  },\r\n  decorators: [ // No añadir hasta explicar que, sin esta propiedad, no se muestra el botón\r\n    moduleMetadata({\r\n      declarations: [ButtonComponent],\r\n      imports: [CommonModule],\r\n    }),\r\n    componentWrapperDecorator((story) => `<div class=\"w-25\">${story}</div>`) // Añadir esta propiedad para que se muestre de tamaño más\r\n  ],\r\n}"
                }
            ],
            "src/app/products/components/product-list/product-list.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/products/components/product-list/product-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/products/components/product-list/product-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ProductListComponent>",
                    "defaultValue": "{\r\n  title: 'Products/Product list',\r\n  component: ProductListComponent,\r\n  tags: ['products', 'product', 'list', 'autodocs'],\r\n  args: {\r\n    products: productsData.products.slice(0, 4),\r\n  },\r\n  decorators: [ // No añadir hasta explicar que, sin esta propiedad, no se muestra el botón\r\n    moduleMetadata({\r\n      declarations: [ProductCardComponent, ButtonComponent],\r\n      imports: [CommonModule],\r\n    }),\r\n  ],\r\n}"
                }
            ],
            "src/app/shared/components/button/button.component.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonComponent>",
                    "defaultValue": "{\r\n  title: 'Shared/Button', // La ruta donde se va a mostrar nuestra historia (en el sidebar de Storybook)\r\n  component: ButtonComponent,\r\n  tags: ['shared', 'button', 'autodocs'],\r\n  args: { // Aquí definimos los valores por defecto de los inputs de nuestro componente\r\n    label: 'Button'\r\n  },\r\n  argTypes: { // Aquí definimos los tipos de inputs para las propiedades de nuestro componente\r\n  },\r\n  parameters: { // Los parámetros nos permiten definir configuraciones adicionales para nuestra historia (para controlar las funcionalidades de Storybook o de los addons)\r\n    backgrounds: {\r\n      values: [\r\n        { name: 'red', value: '#f00' },\r\n        { name: 'green', value: '#0f0' },\r\n        { name: 'blue', value: '#00f' },\r\n      ],\r\n    },\r\n  },\r\n  decorators: [] // Los decoradores nos permiten definir funciones que se ejecutan antes y después de renderizar nuestra historia\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'Primary',\r\n    primary: true\r\n  }\r\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    label: 'Secondary',\r\n    primary: false\r\n  }\r\n}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\r\n  parameters: {\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/,\r\n      },\r\n    },\r\n  },\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/shared/components/button/button.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "src/app/shared/components/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/app/shared/components/search-bar/search-bar.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SearchBarComponent>",
                    "file": "src/app/shared/components/search-bar/search-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/app/products/components/product-card/product-card.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ProductCardComponent>",
                    "file": "src/app/products/components/product-card/product-card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/app/products/components/product-list/product-list.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Meta<ProductListComponent>",
                    "file": "src/app/products/components/product-list/product-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "products",
                        "loadChildren": "./products/products.module#ProductsModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/products/products-routing.module.ts",
                                        "module": "ProductsRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "ProductCatalogPageComponent"
                                            },
                                            {
                                                "path": ":id",
                                                "component": "ProductDetailsPageComponent"
                                            },
                                            {
                                                "path": "**",
                                                "redirectTo": ""
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "ProductsModule"
                            }
                        ]
                    },
                    {
                        "path": "**",
                        "redirectTo": "products"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 9,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/products/components/product-card/product-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/products/components/product-card/product-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Loading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/products/components/product-card/product-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/products/components/product-card/product-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductCardComponent",
                "coveragePercent": 50,
                "coverageCount": "3/6",
                "status": "medium"
            },
            {
                "filePath": "src/app/products/components/product-list/product-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/products/components/product-list/product-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/products/components/product-list/product-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductListComponent",
                "coveragePercent": 66,
                "coverageCount": "4/6",
                "status": "good"
            },
            {
                "filePath": "src/app/products/interfaces/product.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Product",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/products/pages/product-catalog-page/product-catalog-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductCatalogPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/products/pages/product-details-page/product-details-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductDetailsPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/products/services/products.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProductsService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 66,
                "coverageCount": "4/6",
                "status": "good"
            },
            {
                "filePath": "src/app/shared/components/button/button.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "classesBySize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/loading-spinner/loading-spinner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoadingSpinnerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/search-bar/search-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/search-bar/search-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/search-bar/search-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchBarComponent",
                "coveragePercent": 33,
                "coverageCount": "2/6",
                "status": "medium"
            }
        ]
    }
}